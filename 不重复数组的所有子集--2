import java.util.LinkedList;
 import java.util.List;
public class Solution {
    public static void main(String[] args) {
        int[] nums = {1,2,3};
        List<List<Integer>> list = subsets(nums);
        System.out.println(list);
    }
    public static List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> res = new LinkedList<>();
        dfs(res, new LinkedList<Integer>(), nums, 0); //从含有0个元素的情况开始分析 16
        return res;
    }
    public static void dfs(List<List<Integer>> res, List<Integer> temp, int[] nums, int start) {
        res.add(new LinkedList<Integer>(temp));
        for (int i =start; i < nums.length; i++) {
            temp.add(nums[i]);
            dfs(res, temp, nums, i + 1);
            temp.remove(temp.size() - 1);
        }
    }
}
