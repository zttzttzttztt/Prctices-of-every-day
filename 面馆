import java.util.*;

class Customer implements Comparable<Customer> {

    public int num;

    public int fee;

    public Customer(int num, int fee) {

        this.num = num;

        this.fee = fee;

    }

    @Override

    public int compareTo(Customer o) {

        if(o.fee>this.fee){

            return 1;

        }else if(o.fee <this.fee){

            return -1;

        }

        return 0;

    }

}

public class Solution {

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);

        while (sc.hasNext()){

            int n = sc.nextInt();

            int m = sc.nextInt();

            int[] a = new int[n];//桌子

            for(int i=0; i<a.length; i++){

                a[i] = sc.nextInt();

            }

            Arrays.sort(a);//桌子由小到大排序

            PriorityQueue<Customer> queue = new PriorityQueue<>();

            for(int i=0; i<m; i++){

                int b = sc.nextInt();

                int c = sc.nextInt();

                if(b <= a[n-1]){

                    queue.add(new Customer(b,c));

                }

            }

            long sum = 0;//金额

            int count = 0;//桌子被使用的个数

            boolean[] flag = new boolean[n];//记录桌子是否已经有人坐了

            while (!queue.isEmpty()){

                Customer customer = queue.poll();

                for(int j=0; j<n; j++){

                    if(a[j]>=customer.num && !flag[j]){

                        sum += customer.fee;

                        count++;

                        flag[j] = true;

                        break;

                    }

                }

                if(count == n){

                    break;

                }

            }

            System.out.println(sum);

        }

    }

