method one:

import java.util.ArrayList;
public class Solution {
    public int[] multiply(int[] A) {
        int n=A.length;
        int[] left=new int[n];
        int[] right=new int[n];
        left[0]=1;
        right[n-1]=1;
        for(int i=1;i<A.length;i++){
            left[i]=left[i-1]*A[i-1];
        }
        for(int i=0;i<n;i++)
        System.out.println(left[i]);    
        for(int i=A.length-2;i>=0;i--){
            right[i]=right[i+1]*A[i+1];
        }
        System.out.println(String.valueOf(right));   
        for(int i=0;i<n;i++){
            A[i]=left[i]*right[i];
        }
        return A;
    }
}



Method two:
public class Solution {
    public int[] multiply(int[] A) {
        int length = A.length;
        int[] B = new int[length];
        if(length != 0 ){
            B[0] = 1;
            //计算下三角连乘
            for(int i = 1; i < length; i++){
                B[i] = B[i-1] * A[i-1];
            }
            int temp = 1;
            //计算上三角
            for(int j = length-2; j >= 0; j--){
                temp *= A[j+1];
                B[j] *= temp;
            }
        }
        return B;
    }
}
